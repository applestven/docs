(window.webpackJsonp=window.webpackJsonp||[]).push([[126],{642:function(s,t,n){"use strict";n.r(t);var a=n(38),e=Object(a.a)({},(function(){var s=this,t=s.$createElement,n=s._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h2",{attrs:{id:"redis-入门记"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#redis-入门记"}},[s._v("#")]),s._v(" redis 入门记")]),s._v(" "),n("ol",[n("li",[s._v("基本概念\nRedis 是一个高性能的key-value数据库。\nNoSQL：一类新出现的数据库(not only sql)；泛指非关系型的数据库，不支持SQL语法\n配置\nRedis的配置信息在/etc/redis/redis.conf下。\n查看\nsudo vi /etc/redis/redis.conf\n核心配置选项\n绑定ip：如果需要远程访问，可将此⾏注释，或绑定⼀个真实ip\nbind 127.0.0.1\n端⼝，默认为6379\nport 6379\n数据⽂件 : dbfilename dump.rdb")])]),s._v(" "),n("p",[s._v("数据⽂件存储路径 : dir /var/lib/redis")]),s._v(" "),n("p",[s._v('⽇志⽂件 : logfile "/var/log/redis/redis-server.log"')]),s._v(" "),n("p",[s._v("数据库，默认有16个 : database 16")]),s._v(" "),n("ol",{attrs:{start:"2"}},[n("li",[n("p",[s._v("连接启动方式\n1.启动redis服务器命令： redis-server 配置文件名称 (可以不填，读取默认配置)\n2.连接redis客户端命令： redis-cli -h ip地址 -p 端口   -c:连接集群\n如：redis-cli -h 47.101.63.222 -p 56379")])]),s._v(" "),n("li",[n("p",[s._v("连接本地：redis-cli")])]),s._v(" "),n("li",[n("p",[s._v("设置密码：config set requirepass pass_123456")])]),s._v(" "),n("li",[n("p",[s._v("获取密码：config get requirepass")])]),s._v(" "),n("li",[n("p",[s._v("登录：auth pass_123456")])]),s._v(" "),n("li",[n("p",[s._v("切换数据库：")]),s._v(" "),n("p",[s._v("数据库没有名称，默认有16个，通过0-15来标识，连接redis默认选择第一个数据库")]),s._v(" "),n("p",[s._v("select 10")])])]),s._v(" "),n("h2",{attrs:{id:"redis-的安装"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#redis-的安装"}},[s._v("#")]),s._v(" redis 的安装")]),s._v(" "),n("ol",[n("li",[s._v("环境准备 ：")])]),s._v(" "),n("ul",[n("li",[n("p",[s._v("windows 安装ubuntu")]),s._v(" "),n("ul",[n("li",[s._v("Windows  控制面板 - 启动或关闭windows功能 - 适用linux的windows子系统")]),s._v(" "),n("li",[s._v("microsoft Store 安装Ubuntu")]),s._v(" "),n("li",[s._v("打开Ubuntu报错 ：  Installing, this may take a few minutes...\nWslRegisterDistribution failed with error: 0x800701bc\nError: 0x800701bc WSL 2 ?????????????????? https://aka.ms/wsl2kernel")]),s._v(" "),n("li",[s._v("解决参考  http://kuaixun.yndtjj.com/kuaixun/20220507/079017.html  首先下载Windows Subsystem for Linux Update setup 官方版将WSL1升级到WSL2。下载地址：http://www.xitongzhijia.net/soft/244754.html\n然后再次尝试即可。\n如果还没有解决问题，就需要用管理权限打开cmd或者powershell，分别输入下面代码")])]),s._v(" "),n("p",[s._v("用管理权限打开cmd或者powershell，分别输入下面代码")]),s._v(" "),n("p",[s._v("bcdedit /set hypervisorlaunchtype Auto")]),s._v(" "),n("p",[s._v("Enable-WindowsOptionalFeature -Online -FeatureName Microsoft-Hyper-V -All")]),s._v(" "),n("p",[s._v("Enable-WindowsOptionalFeature -Online -FeatureName VirtualMachinePlatform")]),s._v(" "),n("p",[s._v("Enable-WindowsOptionalFeature -Online -FeatureName Microsoft-Windows-Subsystem-Linux")]),s._v(" "),n("p",[s._v("到这里就应该都没有问题了。")]),s._v(" "),n("ul",[n("li",[s._v("可以应用打开ubuntu  ， 也可以cmd 输入ubuntu 打开")])])])]),s._v(" "),n("ol",{attrs:{start:"2"}},[n("li",[n("p",[s._v("安装redis-serve")]),s._v(" "),n("p",[s._v("sudo apt update\nsudo apt install redis-server\nsudo service redis-server start")])])]),s._v(" "),n("h1",{attrs:{id:"redis-基本操作"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#redis-基本操作"}},[s._v("#")]),s._v(" redis 基本操作")]),s._v(" "),n("p",[s._v("基本的数据格式和操作")]),s._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("string类型：\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 保存：")]),s._v("\n\t设置值：set key value\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("设置键为name值为itcast的数据"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("set")]),s._v(" name itcast\n \n    设置值,过期时长：setex key seconds value\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("设置键为aa值为aa过期时间为3秒的数据"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        setex aa "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(" aa\n \n    设置多个键值： mset key1 value1 key2 value2 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("设置键为"),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'a1'")]),s._v("值为"),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'python'")]),s._v("、键为"),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'a2'")]),s._v("值为"),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'java'")]),s._v("、键为"),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'a3'")]),s._v("值为"),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'c'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        mset a1 python a2 java a3 c\n \n        \n    追加值：append key value\n        （向键为a1中追加值"),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("' haha'")]),s._v("）\n         append "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'a1'")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'haha'")]),s._v("\n \n    \n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 获取：")]),s._v("\n    根据键获取值，如果不存在此键则返回nil --  get key\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("获取键"),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'name'")]),s._v("的值"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        get "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'name'")]),s._v("\n \n    根据多个键获取多个值: mget key1 key2 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("获取键a1、a2、a3'的值"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        mget a1 a2 a3\n")])])]),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("键命令\n    \n    查找键，参数⽀持正则表达式；--  keys pattern\n \n    "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(". 查看所有键     keys *\n \n    "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(". 查看名称中包含 a 的键    keys "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'a*'")]),s._v("\n \n    "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(". 判断键是否存在，如果存在返回1，不存在返回0  exists key1\n \n    "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(". 查看键对应的value的类型  "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("type")]),s._v(" key\n \n    "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v(". 删除键及对应的值  del key1 key2 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".\n         "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("删除键a2、a3"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" -- del a2 a3\n \n    "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("6")]),s._v(". 设置过期时间，以秒为单位，如果没有指定过期时间则⼀直存在，直到使⽤DEL移除\n           expire key seconds\n \n         "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("设置键"),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'a1'")]),s._v("的过期时间为3秒"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" -- expire "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'a1'")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("\n \n    "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("7")]),s._v(". 查看有效时间，以秒为单位  ttl key\n         "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("查看键"),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'bb'")]),s._v("的有效时间"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" --  ttl "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'bb'")]),s._v("\n")])])]),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("hash类型\n    ⽤于存储对象，对象的结构为属性、值"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" 值的类型为string\n \n    "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(". 设置单个属性  hset key field value\n         "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("设置键 user的属性name为itheima"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" -- hset user name itheima\n \n    "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(". 设置多个属性  hmset key field1 value1 field2 value2 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".\n         "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("设置键u2的属性name为itcast、属性age为11"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n            hmset u2 name itcast age "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("11")]),s._v("\n \n    "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(". 获取指定键所有的属性  hkeys key\n \n    "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(". 获取⼀个属性的值   hget key field\n         "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("获取键u2属性"),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'name'")]),s._v("的值"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n            hget u2 "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'name'")]),s._v("\n \n    "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v(". 获取多个属性的值  hmget key field1 field2 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".\n \n    "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("6")]),s._v(". 获取所有属性的值  hvals key\n \n    "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("7")]),s._v(". 删除属性的值： hdel key field\n         "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("删除键"),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'u2'")]),s._v("的属性"),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'age'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n          hdel u2 age\n")])])]),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("\nset类型:\n    属性：   ⽆序集合\n            元素为string类型\n            元素具有唯⼀性，不重复\n            说明：对于集合没有修改操作\n \n    "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(". 增加\n    添加元素: sadd key member1 member2 \n \n    "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(". 获取\n    返回所有的元素: smembers key\n \n    "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(". 删除\n    删除指定元素： srem key\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("删除键"),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'a3'")]),s._v("的集合中元素"),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'wangwu'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        srem a3 wangwu\n")])])]),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("zset类型"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("有序集合"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(":\n    属性：sorted set，有序集合\n         元素为string类型\n         元素具有唯⼀性，不重复\n         每个元素都会关联⼀个double类型的score，表示权重，通过权重将元素从⼩到⼤排序\n         说明：没有修改操作 \n \n    "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(". 增加\n       添加元素: zadd key score1 member1 score2 member2\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("向键"),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'a4'")]),s._v("的集合中添加元素"),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'lisi'")]),s._v("、"),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'wangwu'")]),s._v("、"),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'zhaoliu'")]),s._v("、"),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'zhangsan'")]),s._v("，权重分别为4、5、6、3"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n         zadd a4 "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(" lisi "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v(" wangwu "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("6")]),s._v(" zhaoliu "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(" zhangsan\n \n    "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(". 获取\n       返回所有的元素: zrange key start stop  \n        start、stop为元素的下标索引\n        索引从左侧开始，第⼀个元素为0\n        索引可以是负数，表示从尾部开始计数，如-1表示最后⼀个元素 \n \n    "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(". 删除\n       删除指定元素： zrem key member1 member2 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".\n \n       删除权重在指定范围的元素： zremrangebyscore key min max\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("删除集合"),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'a4'")]),s._v("中权限在5、6之间的元素"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n         zremrangebyscore a4 "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("6")]),s._v("\n")])])])])}),[],!1,null,null,null);t.default=e.exports}}]);