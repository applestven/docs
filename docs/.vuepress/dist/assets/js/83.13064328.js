(window.webpackJsonp=window.webpackJsonp||[]).push([[83],{593:function(t,a,s){"use strict";s.r(a);var r=s(38),e=Object(r.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"第5章-react路由-5"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第5章-react路由-5"}},[t._v("#")]),t._v(" 第5章：React路由@5")]),t._v(" "),s("h2",{attrs:{id:"三、路由的基本使用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#三、路由的基本使用"}},[t._v("#")]),t._v(" 三、路由的基本使用")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v("\t\t1.明确好界面中的导航区、展示区\n\t\t2.导航区的a标签改为Link标签\n\t\t\t\t\t<Link to=\"/xxxxx\">Demo</Link>\n\t\t3.展示区写Route标签进行路径的匹配\n\t\t\t\t\t<Route path='/xxxx' component={Demo}/>\n\t\t4.<App>的最外侧包裹了一个<BrowserRouter>或<HashRouter>\n")])])]),s("h2",{attrs:{id:"四、路由组件与一般组件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#四、路由组件与一般组件"}},[t._v("#")]),t._v(" 四、路由组件与一般组件")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v('\t\t1.写法不同：\n\t\t\t\t\t一般组件：<Demo/>\n\t\t\t\t\t路由组件：<Route path="/demo" component={Demo}/>\n\t\t2.存放位置不同：\n\t\t\t\t\t一般组件：components\n\t\t\t\t\t路由组件：pages\n\t\t3.接收到的props不同：\n\t\t\t\t\t一般组件：写组件标签时传递了什么，就能收到什么\n\t\t\t\t\t路由组件：接收到三个固定的属性\n\t\t\t\t\t\t\t\t\t\thistory:\n\t\t\t\t\t\t\t\t\t\t\t\t\tgo: ƒ go(n)\n\t\t\t\t\t\t\t\t\t\t\t\t\tgoBack: ƒ goBack()\n\t\t\t\t\t\t\t\t\t\t\t\t\tgoForward: ƒ goForward()\n\t\t\t\t\t\t\t\t\t\t\t\t\tpush: ƒ push(path, state)\n\t\t\t\t\t\t\t\t\t\t\t\t\treplace: ƒ replace(path, state)\n\t\t\t\t\t\t\t\t\t\tlocation:\n\t\t\t\t\t\t\t\t\t\t\t\t\tpathname: "/about"\n\t\t\t\t\t\t\t\t\t\t\t\t\tsearch: ""\n\t\t\t\t\t\t\t\t\t\t\t\t\tstate: undefined\n\t\t\t\t\t\t\t\t\t\tmatch:\n\t\t\t\t\t\t\t\t\t\t\t\t\tparams: {}\n\t\t\t\t\t\t\t\t\t\t\t\t\tpath: "/about"\n\t\t\t\t\t\t\t\t\t\t\t\t\turl: "/about"\n')])])]),s("h2",{attrs:{id:"五、navlink与封装navlink"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#五、navlink与封装navlink"}},[t._v("#")]),t._v(" 五、NavLink与封装NavLink")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v("\t\t\t1.NavLink可以实现路由链接的高亮，通过activeClassName指定样式名\n")])])]),s("h2",{attrs:{id:"六、switch的使用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#六、switch的使用"}},[t._v("#")]),t._v(" 六、Switch的使用")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v("\t\t\t1.通常情况下，path和component是一一对应的关系。\n\t\t\t2.Switch可以提高路由匹配效率(单一匹配)。\n")])])]),s("h2",{attrs:{id:"七、解决多级路径刷新页面样式丢失的问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#七、解决多级路径刷新页面样式丢失的问题"}},[t._v("#")]),t._v(" 七、解决多级路径刷新页面样式丢失的问题")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v("\t\t\t1.public/index.html 中 引入样式时不写 ./ 写 / （常用）\n\t\t\t2.public/index.html 中 引入样式时不写 ./ 写 %PUBLIC_URL% （常用）\n\t\t\t3.使用HashRouter\n")])])]),s("h2",{attrs:{id:"八、路由的严格匹配与模糊匹配"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#八、路由的严格匹配与模糊匹配"}},[t._v("#")]),t._v(" 八、路由的严格匹配与模糊匹配")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v('\t\t\t1.默认使用的是模糊匹配（简单记：【输入的路径】必须包含要【匹配的路径】，且顺序要一致）\n\t\t\t2.开启严格匹配：<Route exact={true} path="/about" component={About}/>\n\t\t\t3.严格匹配不要随便开启，需要再开，有些时候开启会导致无法继续匹配二级路由\n')])])]),s("h2",{attrs:{id:"九、redirect的使用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#九、redirect的使用"}},[t._v("#")]),t._v(" 九、Redirect的使用")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v('\t\t\t1.一般写在所有路由注册的最下方，当所有路由都无法匹配时，跳转到Redirect指定的路由\n\t\t\t2.具体编码：\n\t\t\t\t\t<Switch>\n\t\t\t\t\t\t<Route path="/about" component={About}/>\n\t\t\t\t\t\t<Route path="/home" component={Home}/>\n\t\t\t\t\t\t<Redirect to="/about"/>\n\t\t\t\t\t</Switch>\n')])])]),s("h2",{attrs:{id:"十、嵌套路由"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#十、嵌套路由"}},[t._v("#")]),t._v(" 十、嵌套路由")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v("\t\t\t1.注册子路由时要写上父路由的path值\n\t\t\t2.路由的匹配是按照注册路由的顺序进行的\n")])])]),s("h2",{attrs:{id:"十一、向路由组件传递参数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#十一、向路由组件传递参数"}},[t._v("#")]),t._v(" 十一、向路由组件传递参数")]),t._v(" "),s("p",[t._v("1.params参数")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("路由链接")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("携带参数"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("："),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Link to"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/demo/test/tom/18'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("详情"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("Link"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("注册路由")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("声明接收"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("："),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Route path"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/demo/test/:name/:age"')]),t._v(" component"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("Test"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n接收参数："),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("props"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("match"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("params\n")])])]),s("p",[t._v("2.search参数")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("路由链接")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("携带参数"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("："),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Link to"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/demo/test?name=tom&age=18'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("详情"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("Link"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("注册路由")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("无需声明，正常注册即可"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("："),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Route path"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/demo/test"')]),t._v(" component"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("Test"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n接收参数："),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("props"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("location"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("search\n备注：获取到的search是urlencoded编码字符串，需要借助querystring解析\n\t"),s("span",{pre:!0,attrs:{class:"token template-string"}},[s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),s("span",{pre:!0,attrs:{class:"token template-string"}},[s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("\t\t\t\n3.state参数\n")]),s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),s("span",{pre:!0,attrs:{class:"token template-string"}},[s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),t._v("js\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("路由链接")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("携带参数"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("："),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Link to"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("pathname")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/demo/test'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("state")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'tom'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("age")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("18")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("详情"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("Link"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("注册路由")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("无需声明，正常注册即可"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("："),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Route path"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/demo/test"')]),t._v(" component"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("Test"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n接收参数："),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("props"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("location"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state\n备注：刷新也可以保留住参数\n")])])]),s("h2",{attrs:{id:"十二、编程式路由导航"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#十二、编程式路由导航"}},[t._v("#")]),t._v(" 十二、编程式路由导航")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v("借助this.prosp.history对象上的API对操作路由跳转、前进、后退\n\t-this.prosp.history.push()\n\t-this.prosp.history.replace()\n\t-this.prosp.history.goBack()\n\t-this.prosp.history.goForward()\n\t-this.prosp.history.go()\n")])])]),s("h2",{attrs:{id:"十三、browserrouter与hashrouter的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#十三、browserrouter与hashrouter的区别"}},[t._v("#")]),t._v(" 十三、BrowserRouter与HashRouter的区别")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v("1.底层原理不一样：\n\t\t\tBrowserRouter使用的是H5的history API，不兼容IE9及以下版本。\n\t\t\tHashRouter使用的是URL的哈希值。\n2.path表现形式不一样\n\t\t\tBrowserRouter的路径中没有#,例如：localhost:3000/demo/test\n\t\t\tHashRouter的路径包含#,例如：localhost:3000/#/demo/test\n3.刷新后对路由state参数的影响\n\t\t\t(1).BrowserRouter没有任何影响，因为state保存在history对象中。\n\t\t\t(2).HashRouter刷新后会导致路由state参数的丢失！！！\n4.备注：HashRouter可以用于解决一些路径错误相关的问题。\n")])])])])}),[],!1,null,null,null);a.default=e.exports}}]);