(window.webpackJsonp=window.webpackJsonp||[]).push([[36],{552:function(t,e,a){"use strict";a.r(e);var s=a(38),r=Object(s.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"杂记"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#杂记"}},[t._v("#")]),t._v(" 杂记")]),t._v(" "),a("h2",{attrs:{id:"webpack4-和-5-的一些区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#webpack4-和-5-的一些区别"}},[t._v("#")]),t._v(" webpack4 和 5 的一些区别")]),t._v(" "),a("ol",[a("li",[t._v("webpack5 内置图片处理 只需要做配置即可使用")]),t._v(" "),a("li",[t._v("内置清空上次打包内容  ，在output中配置clearn：true")])]),t._v(" "),a("h2",{attrs:{id:"post-put-以及-patch-请求的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#post-put-以及-patch-请求的区别"}},[t._v("#")]),t._v(" post put  以及 patch 请求的区别")]),t._v(" "),a("p",[t._v("根据HTTP规范，POST一般用于创建数据，不是安全和幂等的")]),t._v(" "),a("p",[t._v("** PUT与PATCH都可以带RequestBody请求")]),t._v(" "),a("p",[t._v("根据HTTP规范，PATCH方法用于资源的部分内容的更新；非幂等")]),t._v(" "),a("p",[t._v("根据HTTP规范，PUT用于更新某个较为完整的资源 ；幂等")]),t._v(" "),a("p",[t._v("解释 ： 1.PUT虽然也是更新资源，但要求前端提供的一定是一个完整的资源对象，理论上说，如果你用了PUT，但却没有提供完整的UserInfo，那么缺了的那些字段应该被清空.另外PUT会有一个create操作,加入更新的id不存在,会进行创建,而PATCH则没有这个")]),t._v(" "),a("ol",{attrs:{start:"2"}},[a("li",[t._v("幂等（idempotent、idempotence）是一个数学与计算机学概念，常见于抽象代数中。\n在编程中.一个幂等操作的特点是其任意多次执行所产生的影响均与一次执行的影响相同。幂等函数，或幂等方法，")])]),t._v(" "),a("p",[t._v("是指可以使用相同参数重复执行，并能获得相同结果的函数。这些函数不会影响系统状态，也不用担心重复执行会对系统造成改变。")]),t._v(" "),a("p",[t._v("例如，“setTrue()”函数就是一个幂等函数,无论多次执行，其结果都是一样的.更复杂的操作幂等保证是利用唯一交易号(流水号)实")]),t._v(" "),a("p",[t._v("现。")])])}),[],!1,null,null,null);e.default=r.exports}}]);