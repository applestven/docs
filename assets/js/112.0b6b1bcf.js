(window.webpackJsonp=window.webpackJsonp||[]).push([[112],{625:function(t,i,s){"use strict";s.r(i);var a=s(38),v=Object(a.a)({},(function(){var t=this,i=t.$createElement,s=t._self._c||i;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"git基操"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git基操"}},[t._v("#")]),t._v(" git基操")]),t._v(" "),s("h2",{attrs:{id:"git-相关创建分支推送分支-部署ssh"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git-相关创建分支推送分支-部署ssh"}},[t._v("#")]),t._v(" git  相关创建分支推送分支（部署ssh）")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("新建一个本地分支\ngit checkout -b ts_EN")])]),t._v(" "),s("li",[s("p",[t._v("新建一个本地分支 以master主分支为模板创建一个yutong分支在从公用的仓库fetch代码：\ngit fetch origin master:yutong")])]),t._v(" "),s("li",[s("p",[t._v("提交到远程分支（没有需要commit的内容） //提交到远程分支：\ngit checkout -b ts_EN")])]),t._v(" "),s("li",[s("p",[t._v("查询分支\ngit branch -a（-r只显示所有的分支 ， -a比-r多了本地已经选择的分支）  查看所有的分支")])]),t._v(" "),s("li",[s("p",[t._v("切换分支  / 切换某个文件（修改后切换原文件）\ngit checkout   xxx")])]),t._v(" "),s("li",[s("p",[t._v("删除本地分支：\ngit branch -d dev20181018")])]),t._v(" "),s("li",[s("p",[t._v("如果删除不了可以强制删除，\ngit branch -D dev20181018")])]),t._v(" "),s("li",[s("p",[t._v("有必要的情况下，删除远程分支(慎用)：\ngit push origin --delete dev20181018")])]),t._v(" "),s("li",[s("p",[t._v("提交冲突的情况下：\nUpdates were rejected because the tip of your current branch is behind")])]),t._v(" "),s("li",[s("p",[t._v("先更新本地版本  git pull  origin  xxx")])]),t._v(" "),s("li",[s("p",[t._v("再进行提交   git  push origin xxx")])]),t._v(" "),s("li",[s("p",[t._v("同步远程仓库中的代码更新到本地仓库中的对应分支上 ，它的作用是从远程仓库（origin）获取分支（dev20181018）的最新版本，并将它存储在本地仓库中的一个名为dev20181018的分支上\ngit fetch origin dev20181018:dev20181018")])])]),t._v(" "),s("h2",{attrs:{id:"临时关闭-git-commit-的eslint功能"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#临时关闭-git-commit-的eslint功能"}},[t._v("#")]),t._v(" 临时关闭 git commit 的eslint功能")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v('git commit --no-verify -m " 添加配置说明"  \n')])])]),s("h2",{attrs:{id:"查看本机ssh公钥-生成公钥"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#查看本机ssh公钥-生成公钥"}},[t._v("#")]),t._v(" 查看本机ssh公钥，生成公钥")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v('$ ssh-keygen -t rsa -C "applestven@gmail.com"\n')])])]),s("p",[t._v("参考地址 https://blog.csdn.net/shog808/article/details/76563136")]),t._v(" "),s("ol",[s("li",[t._v("打开你的git bash 窗口(cmd打不开 必须gitbash)")]),t._v(" "),s("li",[t._v("进入.ssh目录： cd ~/.ssh")]),t._v(" "),s("li",[t._v("查看公钥： cat id_rsa.pub 或者 vim id_rsa.pub")])]),t._v(" "),s("h2",{attrs:{id:"git-设置本地相关"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git-设置本地相关"}},[t._v("#")]),t._v(" git 设置本地相关")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v('git config --global user.name "你的名字"\ngit config --global user.email "你的邮箱"\n\nps：ssh-keygen -t rsa -C "你的邮箱"     重新生成你的公钥\n\nssh -T git@github.com 测试一下通不通\n')])])]),s("h2",{attrs:{id:"服务器添加公钥"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#服务器添加公钥"}},[t._v("#")]),t._v(" 服务器添加公钥")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v("1. 添加公钥到authorized_keys \nsudo vim ~/.ssh/authorized_keys\n2. 重启ssh服务  （unbuntu）\nsudo /etc/init.d/ssh restart\n")])])]),s("h2",{attrs:{id:"github技巧"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#github技巧"}},[t._v("#")]),t._v(" github技巧：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v("参考地址 ：https://www.bilibili.com/video/BV1q54y1f7h6?spm_id_from=333.1007.tianma.1-1-1.click\n")])])]),s("ol",[s("li",[s("p",[t._v("按“ s ”  可搜索项目  在大厅搜索查看高级搜索  start  时间等")])]),t._v(" "),s("li",[s("p",[t._v("按 “ t ” 查找文件 ； 点进源代码后，按“l”：跳转到某一行")])])]),t._v(" "),s("p",[t._v("点击行号：可复制这行代码 生成永久链接")]),t._v(" "),s("ol",{attrs:{start:"3"}},[s("li",[t._v("按'。' 在线vscode（不好用 速度慢）")])]),t._v(" "),s("ul",[s("li",[t._v("代码跳转：")])]),t._v(" "),s("ul",[s("li",[t._v("下载到本地")]),t._v(" "),s("li",[t._v("在线vscode：仓库详情界面按下“。”键，")])]),t._v(" "),s("ol",{attrs:{start:"4"}},[s("li",[t._v("在线运行项目")])]),t._v(" "),s("p",[t._v("在项目地址前加上"),s("code",[t._v("gitpod.io/#/")]),t._v("前缀\n")]),t._v(" "),s("h2",{attrs:{id:"git-添加远程地址"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git-添加远程地址"}},[t._v("#")]),t._v(" git 添加远程地址")]),t._v(" "),s("p",[t._v("首先，你需要确保你处于一个 Git 仓库的目录中。如果你确定你已经在一个 Git 仓库中，但仍然遇到这个问题，你可以尝试运行 git init 来初始化一个 Git 仓库，然后再次尝试添加远程地址")]),t._v(" "),s("p",[t._v("要管理两个远程地址并将提交的提交一起发送到新远程地址，你可以按照以下步骤操作")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("使用 Git 命令添加新的远程地址\ngit remote add origin <远程仓库的 URL>")])]),t._v(" "),s("li",[s("p",[t._v("推送到新的远程地址：")])])]),t._v(" "),s("p",[t._v("git push new_remote <分支名>")]),t._v(" "),s("ul",[s("li",[t._v("同时推送到两个远程地址\n首先，编辑 Git 配置文件：")])]),t._v(" "),s("p",[t._v("git config --global --edit")]),t._v(" "),s("p",[t._v("在配置文件中添加如下内容：")]),t._v(" "),s("p",[t._v('[remote "all"]\nurl = <原远程地址>\nurl = <新远程地址>')]),t._v(" "),s("p",[t._v("这样你就创建了一个名为 all 的远程别名，代表了两个远程地址。")]),t._v(" "),s("p",[t._v("提交到两个远程地址：\n现在每次你想要提交到两个远程地址时，可以使用 all 别名：")]),t._v(" "),s("p",[t._v("git push all <分支名>")])])}),[],!1,null,null,null);i.default=v.exports}}]);