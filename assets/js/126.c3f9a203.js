(window.webpackJsonp=window.webpackJsonp||[]).push([[126],{637:function(t,a,s){"use strict";s.r(a);var e=s(38),r=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"数据库"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数据库"}},[t._v("#")]),t._v(" 数据库")]),t._v(" "),s("h2",{attrs:{id:"数据库的相关名词"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数据库的相关名词"}},[t._v("#")]),t._v(" 数据库的相关名词")]),t._v(" "),s("ol",[s("li",[t._v("事务处理\n数据的事务处理是指对一组数据库操作进行管理和控制，以确保这组操作要么全部成功执行，要么全部回滚，不出现部分成功或失败的情况。在数据库中，事务处理是通过使用ACID属性来保证的，即原子性、一致性、隔离性和持久性。")])]),t._v(" "),s("p",[t._v("原子性：指一个事务中的所有操作要么全部完成，要么全部回滚，不会出现部分成功或失败的情况。")]),t._v(" "),s("p",[t._v("一致性：指一个事务执行前后，数据库的约束条件和完整性规则都得到满足，不会破坏数据的一致性。")]),t._v(" "),s("p",[t._v("隔离性：指多个事务并发执行时，每个事务都应该被隔离开来，不会相互干扰，保证数据的正确性。")]),t._v(" "),s("p",[t._v("持久性：指一个事务提交后，对数据库所做的更改应该得到持久化，即使系统发生故障，数据也不会丢失。")]),t._v(" "),s("p",[t._v("事务处理通常用于处理复杂的数据操作，例如银行转账、在线购物等场景，保证数据的正确性和完整性。在实现事务处理时，需要使用数据库的事务机制来保证数据的一致性和完整性。")])])}),[],!1,null,null,null);a.default=r.exports}}]);